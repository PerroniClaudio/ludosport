services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_KEY=${APP_KEY}
      - REDIS_HOST=redis
      - MEILISEARCH_HOST=http://meilisearch:7700
    volumes:
      - ./docker/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
      - ./docker/logs/laravel:/var/www/html/storage/logs
    networks:
      - app-network
    depends_on:
      - redis
      - meilisearch
    platform: linux/amd64

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
      - ./public:/var/www/html/public
      - ./docker/logs/nginx:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - app
    platform: linux/amd64

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    restart: unless-stopped
    ports:
      - "9113:9113"
    environment:
      - NGINX_STATUS_URL=http://nginx/nginx_status
    networks:
      - app-network
    depends_on:
      - nginx
    platform: linux/amd64

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "6379:6379"
    platform: linux/amd64

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    restart: unless-stopped
    environment:
      - REDIS_ADDR=redis:6379
    ports:
      - "9121:9121"
    networks:
      - app-network
    depends_on:
      - redis
    platform: linux/amd64

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: meilisearch
    restart: unless-stopped
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_KEY}
    volumes:
      - meilisearch_data:/data.ms
    ports:
      - "7700:7700"
    networks:
      - app-network
    platform: linux/amd64

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - app-network
    platform: linux/amd64

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    networks:
      - app-network
    platform: linux/amd64

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    privileged: true
    container_name: cadvisor
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "9323:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup/cpu:/cgroup/cpu
      - /cgroup/cpuacct:/cgroup/cpuacct
      - /cgroup/cpuset:/cgroup/cpuset
      - /cgroup/memory:/cgroup/memory
      - /cgroup/blkio:/cgroup/blkio

networks:
  app-network:
    driver: bridge

volumes:
  meilisearch_data:
  prometheus_data:
  grafana_data:
  app_logs:
