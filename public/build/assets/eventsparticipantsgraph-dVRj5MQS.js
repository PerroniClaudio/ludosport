import{C as i}from"./auto-CdBL8C_c.js";const o=()=>({eventList:[],filteredEventList:[],currentEventsPage:1,totalEventsPages:1,paginatedEvents:[],colors:["rgb(237,116,0)","rgb(212, 145, 255)","rgb(179,4,16)","rgb(0,94,152)","rgb(0,129,57)"],async getEventList(){return await(await fetch("/technician/dashboard-events")).json()},createGraph(){const t=document.getElementById("participantseventsgraph").getContext("2d"),e=this.eventList.map(a=>a.name),s=this.eventList.map(a=>a.participants),n={type:"pie",data:{labels:e,datasets:[{label:"Athletes",data:s,backgroundColor:this.colors,hoverOffset:4}]}};new i(t,n)},searchEventByValue(t){const e=t.target.value.toLowerCase();e!=""?(this.filteredEventList=this.eventList.filter(s=>s.name.toLowerCase().includes(e)),this.updateEvents()):(this.filteredEventList=this.eventList,this.updateEvents())},nextPage(){this.currentEventsPage<this.totalEventsPages&&(this.currentEventsPage++,this.updateEvents())},previousPage(){this.currentEventsPage>1&&(this.currentEventsPage--,this.updateEvents())},updateEvents(){const t=(this.currentEventsPage-1)*10;this.totalEventsPages=Math.ceil(this.filteredEventList.length/10),this.paginatedEvents=this.filteredEventList.slice(t,t+10)},async init(){console.log("participantseventsgraph initialized"),this.eventList=await this.getEventList(),console.log(this.eventList),this.createGraph(),this.filteredEventList=this.eventList,this.totalEventsPages=Math.ceil(this.filteredEventList.length/10),this.updateEvents()}});export{o as eventsparticipantsgraph};
